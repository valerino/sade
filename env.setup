# generates lldb.setup to customize lldb startup
define create_lldb_setup
    @echo 'platform select remote-android' > ./lldb.setup
    @echo 'platform connect connect://127.0.0.1:5039' >> ./lldb.setup
    @echo 'file ./$(OUT_BIN)' >> ./lldb.setup
    @echo 'process launch --stop-at-entry --' >> ./lldb.setup
    @echo 'target stop-hook add' >> ./lldb.setup
    @echo 'bt' >> ./lldb.setup
    @echo 'disassemble --pc' >> ./lldb.setup
    @echo 'DONE' >> ./lldb.setup
endef

# generates gdb.setup to customize gdb startup
define create_gdb_setup
    @echo 'target remote :5039' > ./gdb.setup
endef

# flags/compiler options
CFLAGS=-O0 -fPIE -pie

# paths
GCC_SRC=./toolchain/arm/bin/arm-linux-androideabi-gcc
GDB_SRC=./toolchain/arm/bin/arm-linux-androideabi-gdb
GDBSERVER_BIN=gdbserver
GDBSERVER_SRC=/opt/android-ndk/prebuilt/android-arm/gdbserver/$(GDBSERVER_BIN)
CLANG_SRC=./toolchain/clang-arm/bin/arm-linux-androideabi-clang
LLDB_SRC=lldb
LLDBSERVER_BIN=lldb-server
LLDBSERVER_SRC=/opt/android-sdk/lldb/2.0/android/armeabi/$(LLDBSERVER_BIN)

# compiler to use (gcc/clang)
COMPILER=gcc

# debugger to use (gdb/lldb)
DEBUGGER=lldb

# the built executable (OUT_DIR/OUT_BIN)
OUT_DIR=.
OUT_BIN=test

# the target dir on device
DEVICE_DIR=/data/local/tmp

# sources
SOURCES=./test.c ./test.s

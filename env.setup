# generates lldb.setup to customize lldb startup
define android_create_lldb_setup
    @echo 'platform select remote-android' > $(OUT_DIR)/lldb.setup
    @echo 'platform connect connect://127.0.0.1:5039' >> $(OUT_DIR)/lldb.setup
    @echo 'file $(OUT_DIR)/$(OUT_BIN)' >> $(OUT_DIR)/lldb.setup
    @echo 'process launch --stop-at-entry --' >> $(OUT_DIR)/lldb.setup
    @echo 'target stop-hook add' >> $(OUT_DIR)/lldb.setup
    @echo 'bt' >> $(OUT_DIR)/lldb.setup
    @echo 'disassemble --pc' >> $(OUT_DIR)/lldb.setup
    @echo 'DONE' >> $(OUT_DIR)/lldb.setup
endef

# generates gdb.setup to customize gdb startup
define create_gdb_setup
    @echo 'target remote :5039' > $(OUT_DIR)/gdb.setup
endef

# flags/compiler options
CFLAGS=-O0 -fPIE -pie

# platform/abi
_PLATFORM=android
_TOOLCHAIN_ABI=arm-linux-androideabi
_LLDB_ABI=armeabi

# paths
TOOLCHAIN_GCC_BASE=~/bin/toolchain/arm
TOOLCHAIN_CLANG_BASE=~/bin/toolchain/clang-arm
GDBSERVER_BASE=/opt/android-ndk/prebuilt/$(_PLATFORM)-arm
LLDB_BASE=/opt/android-sdk/lldb/2.0

_GCC=$(TOOLCHAIN_GCC_BASE)/bin/$(_TOOLCHAIN_ABI)-gcc
_CLANG=$(TOOLCHAIN_CLANG_BASE)/bin/$(_TOOLCHAIN_ABI)-clang
_GDB=$(TOOLCHAIN_GCC_BASE)/bin/$(_TOOLCHAIN_ABI)-gdb
_GDBSERVER=$(GDBSERVER_BASE)/gdbserver
_LLDBSERVER=$(LLDB_BASE)/$(_PLATFORM)/$(_LLDB_ABI)/lldb-server

# android specific paths
ANDROID_SDK_BASE=/opt/android-sdk
_ADB=$(ANDROID_SDK_BASE)/platform-tools/adb

# compiler to use (gcc/clang)
COMPILER=gcc

# debugger to use (gdb/lldb)
DEBUGGER=gdb

# the built executable (OUT_DIR/OUT_BIN)
OUT_DIR=.
OUT_BIN=test

# the target dir on device
DEVICE_DIR=/data/local/tmp

# sources
SOURCES=./test.c ./test.s
